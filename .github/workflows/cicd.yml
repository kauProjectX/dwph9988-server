name: Node.js Docker CI/CD

on:
  push:
    branches:
      - main
      - feat_cicd

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      # - name: Run tests
      #   run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

      - name: Deploy to server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
          PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
        run: |
          printf "%s\n" "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml $USERNAME@$HOST:/root/app/
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USERNAME@$HOST 'docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }} && docker-compose -f /root/app/docker-compose.yml pull && docker-compose -f /root/app/docker-compose.yml up -d'
