// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Members {
  id              BigInt      @id @default(autoincrement()) @map("members_idx")
  userId          String      @unique @map("user_id") @db.VarChar(50)
  password        String      @map("password") @db.VarChar(255)
  userName        String?     @map("user_name") @db.VarChar(255)
  phoneNumber     String?     @map("phone_number") @db.VarChar(20)
  birthday        DateTime?   @db.Date
  userType        UserType?   @map("user_type")
  createdAt       DateTime    @default(dbgenerated("CURRENT_TIMESTAMP")) @map("created_at") @db.Timestamp(0)
  updatedAt       DateTime    @updatedAt @map("updated_at") @db.Timestamp(0)
  
  // 관계 설정
  devices         Devices[]
  protector       Protect[]   @relation("Protector")
  protected       Protect[]   @relation("Protected")
  rewards         Rewards[]
  heatWaves       HeatWave[]

  @@map("members")
}

model Protect {
  id          BigInt   @id @default(autoincrement()) @map("protect_idx")
  protector   Members  @relation("Protector", fields: [protectorId], references: [id])
  protectorId BigInt   @map("members_id")
  protected   Members  @relation("Protected", fields: [protectedId], references: [id])
  protectedId BigInt   @map("members_id2")

  @@map("protect")
}

model Devices {
  id              BigInt      @id @default(autoincrement()) @map("devices_idx")
  deviceToken     String?     @map("devices_token") @db.VarChar(255)
  lastLoggedInAt  DateTime?   @map("last_logged_in_at") @db.Timestamp(0)
  deviceType      DeviceType? @map("deveices_type")
  member          Members     @relation(fields: [memberId], references: [id])
  memberId        BigInt      @map("members_id")

  @@map("devices")
}

model Rewards {
  id          BigInt    @id @default(autoincrement()) @map("rewards_idx")
  member      Members   @relation(fields: [memberId], references: [id])
  memberId    BigInt    @map("members_idx")
  money       BigInt    @map("money")
  content     String?   @db.Text
  prefixMoney BigInt    @map("prefix_money")
  createdAt   DateTime  @default(dbgenerated("CURRENT_TIMESTAMP")) @map("created_at") @db.Timestamp(0)

  @@map("rewards")
}

model News {
  id          BigInt      @id @default(autoincrement()) @map("quizs_idx")
  content     String?     @db.VarChar(255)
  choice1     String?     @map("choice_1") @db.VarChar(255)
  choice2     String?     @map("choice_2") @db.VarChar(255)
  choice3     String?     @map("choice_3") @db.VarChar(255)
  choice4     String?     @map("choice_4") @db.VarChar(255)
  answer      Int?
  newsImages  NewsImage[]

  @@map("news")
}

model NewsImage {
  imageId     String    @map("image_idx") @db.VarChar(255)
  news        News      @relation(fields: [newsId], references: [id])
  newsId      BigInt    @map("quizs_idx")
  imageUrl    String?   @map("image_url") @db.VarChar(255)

  @@id([imageId, newsId])
  @@map("news_image")
}

model HeatWave {
  id                BigInt    @id @default(autoincrement()) @map("heat_wave_idx")
  member           Members   @relation(fields: [memberId], references: [id])
  memberId         BigInt    @map("members_idx")
  location         String?   @db.VarChar(255)
  temperature      Int?
  feelTemperature  Int?      @map("feel_temperature")
  maxTemperature   Int?      @map("max_temperature")

  @@map("heat_wave")
}

enum UserType {
  GUARDIAN
  ELDERLY
  USER
  ADMIN
}

enum DeviceType {
  ANDROID
  IOS
}